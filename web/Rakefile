require 'rubygems'

require "bundler"
Bundler.require(:default)

require 'lib/blackout'
require 'rspec/core/rake_task'

require 'typhoeus'
require 'json'
require 'cgi'
require 'digest/sha1'

JSON_BLACKOUT_FILE = "output/blackout.json"

desc "Run all spec"
RSpec::Core::RakeTask.new do |t|
  t.pattern = 'spec/**/*_spec.rb'
end

# import data from excel file
task :import do
  blackout_data = Blackout::Utils.blackout_data
  File.open(JSON_BLACKOUT_FILE, 'w') {|f| f.write(blackout_data.to_json) }
end

# export data to couchdb
task :export do
  source_urls   = Blackout::Utils.file_urls
  time_data     = Blackout::Utils.blackout_time

  config        = YAML.parse_file("config/couch.yml").transform["config"]
  url           = "#{config["url"]}#{config["database"]}"

  source_urls.each do |source|
    uploads       = {}

    puts "downloading from #{source}"
    data =     Blackout::Utils.blackout_data_from_url(source)

    puts "  storing temp records to disk"
    File.open("output/blackout_#{CGI.escape(source)}.json", 'w') {|f| f.write(data.to_json) }

    # upload data to CouchDB    
    puts "  uploading records to db"
    response = Typhoeus::Request.post("#{url}/_bulk_docs", 
          :body => {"docs" => data }.to_json,
          :headers => {:"Content-Type" => "application/json"},
          :username => config["username"],
          :password => config["password"],
          :auth_method => :basic
        )

    if response
      result = JSON(response.body)
      result.each do |r|
        if r["error"]
          puts "ERROR,#{r["id"]},#{r["error"]},#{r["reason"]}"
        else
          puts "OK,#{r["id"]},#{r["rev"]}"
        end
      end
    end

  end 

end